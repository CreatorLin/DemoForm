@model DemoForm.Models.Topic[]


@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Topic</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @for (var topicIndex = 0; topicIndex < Model.Count(); topicIndex++)
        {
            <div class="form-group">
                @Html.LabelFor(m => Model[topicIndex].Sort, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(m => Model[topicIndex].Sort, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => Model[topicIndex].Sort, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model[topicIndex].Question, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model[topicIndex].Question, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model[topicIndex].Question, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model[topicIndex].Category, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => Model[topicIndex].Category, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => Model[topicIndex].Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model[topicIndex].Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model[topicIndex].Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model[topicIndex].Amount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model[topicIndex].Max, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model[topicIndex].Max, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model[topicIndex].Max, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model[topicIndex].Min, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => Model[topicIndex].Min, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => Model[topicIndex].Min, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => Model[topicIndex].ContentType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => Model[topicIndex].ContentType, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => Model[topicIndex].ContentType, "", new { @class = "text-danger" })
                </div>
            </div>

            <hr>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
